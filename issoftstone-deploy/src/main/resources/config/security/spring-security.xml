<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">
    <!-- 打印调试信息，仅在开发环境中使用 -->
    <!--<security:debug/>-->

    <!-- 不需要被拦截的请求 -->
    <security:http pattern="/static/**" security="none"/>
    <security:http pattern="/assets/**" security="none"/>
    <security:http pattern="/druid/**" security="none"/>
    <security:http pattern="/auth/authCode.image" security="none"/>
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/user/login.json" security="none"/>

    <bean id="csrfSecurityRequestMatcher" class="com.iss.request.CsrfSecurityRequestMatcher"/>
    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>

    <!--配置web端使用权限控制-->
    <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
    <security:http use-expressions="true" auto-config="true">
        <security:form-login
                login-page="/login.jsp"
                default-target-url="/index.do"
                authentication-failure-url="/login.jsp?error=1"
                password-parameter="password"
                username-parameter="username"
                always-use-default-target="true"/>
        <!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->  
		<security:custom-filter ref="interceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
        <!-- <security:intercept-url pattern="/**" access="hasRole('ADMIN')"/> -->
        <security:csrf disabled="true"/>
        <security:logout delete-cookies="JSESSIONID" invalidate-session="true"/>
        <security:expression-handler ref="webexpressionHandler"/>
        <security:session-management invalid-session-url="/login.jsp">
            <!--
                max-sessions只容许一个账号登录，
                error-if-maximum-exceeded 后面账号登录后踢出前一个账号，
                expired-url session过期跳转界面
            -->
            <security:concurrency-control
                    max-sessions="1"
                    error-if-maximum-exceeded="true"
                    expired-url="/login.jsp"
                    session-registry-ref="sessionRegistry"/>
        </security:session-management>
        <security:headers>
            <security:frame-options disabled="true"/>
        </security:headers>
    </security:http>
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="authenticationProvider"/>
    </security:authentication-manager>
    <!-- Md5加密 -->
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
    <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="hideUserNotFoundExceptions" value="true"/>
        <property name="userDetailsService" ref="userDetailsService"/>
        <property name="passwordEncoder" ref="passwordEncoder"/>
        <property name="saltSource" ref="saltSource"/>
    </bean>
    <bean id="userDetailsService" class="com.iss.oauth.user.UserDetailsServiceImpl"/>
    <!-- 盐值加密 salt对应数据库字段-->
    <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <property name="userPropertyToUse" value="salt" />
    </bean>
    <bean id="accessDecisionManager" class="com.iss.oauth.user.UrlAccessDecisionManager" />
    <bean id="interceptor" class="com.iss.oauth.user.UrlFilterSecurityInterceptor">
    	<property name="authenticationManager" ref="authenticationManager" />
    	<property name="accessDecisionManager" ref="accessDecisionManager" />
    	<property name="securityMetadataSource" ref="securityMetadataSource" />
    </bean>
    <!--角色投票器 -->
    <bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
        <property name="rolePrefix" value=""/>
    </bean>
    <bean id="securityMetadataSource" class="com.iss.oauth.user.UrlFilterSecurityMetadataSource" init-method="loadResourceDefine">
    	<property name="userService" ref="userServiceImpl" />
    </bean>
</beans>
